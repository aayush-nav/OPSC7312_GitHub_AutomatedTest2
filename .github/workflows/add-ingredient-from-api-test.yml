name: Android API Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [29, 30]  # Specify the API levels available
        abi: [x86, x86_64]    # Emulator architectures

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Required Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          libpulse0 libnss3 libxshmfence1 libglu1-mesa \
          lib32z1 lib32stdc++6

      - name: Ensure Correct SDK Paths
        run: |
          echo "PATH=$PATH:$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/tools/bin" >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Install Required SDK Components
        run: |
          sdkmanager --install "platform-tools" "emulator" "system-images;android-${{ matrix.api-level }};google_apis;${{ matrix.abi }}"
          sdkmanager --licenses

      - name: Verify Emulator and SDK Installation
        run: |
          sdkmanager --list
          emulator -version

      - name: Create Emulator Device
        run: |
          avdmanager create avd -n test -k "system-images;android-${{ matrix.api-level }};google_apis;${{ matrix.abi }}" -d "Nexus 6" --force

      - name: Start Emulator and Capture Logs
        run: |
          emulator -avd test -no-snapshot-save -no-window -gpu swiftshader_indirect -no-audio -verbose > emulator_output.log 2>&1 &
          sleep 120  # Extended wait time for the emulator to start
        continue-on-error: true

      - name: Display Emulator Logs
        run: cat emulator_output.log

      - name: Restart ADB Server and Ensure It's Running
        run: |
          echo "Killing any existing ADB server..."
          adb kill-server || echo "ADB server not running"
          echo "Starting ADB server..."
          adb start-server
          sleep 5  # Give ADB some time to start and detect devices
          adb devices

      - name: Wait for Emulator to Boot with Better Logging
        run: |
          echo "Waiting for emulator to boot..."
          boot_completed=false
          timeout=0
          while [ "$boot_completed" != "1" ] && [ $timeout -lt 1800 ]; do
            boot_completed=$(adb -e shell getprop sys.boot_completed | tr -d '\r')
            echo "Boot status: $boot_completed. Time elapsed: $timeout seconds."
            sleep 10
            timeout=$((timeout + 10))
            adb devices
          done
          if [ "$boot_completed" != "1" ]; then
            echo "Emulator failed to boot in time"
            exit 1
          fi

      - name: Check Emulator Status
        run: adb -e shell getprop

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Run Instrumented Tests
        run: ./gradlew connectedAndroidTest

      - name: Kill Emulator
        run: adb -e emu kill

      - name: Test API Integration
        run: |
          curl -X GET "https://api.calorieninjas.com/" \
          -H "Authorization: Bearer 24Dq75ydbIBCI6KpY2+BeQ==SJTYu7ebGCugjYj5" \
          -H "Content-Type: application/json"
