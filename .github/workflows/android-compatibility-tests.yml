name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [29, 30, 31] # Android API levels (you can add more)
        abi: [x86, x86_64] # Emulator architectures
        device: [Nexus 6, Pixel 4] # Device models for different screen sizes

    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v2

      # Set up JDK (Java 11 or 17 depending on the requirement of your project)
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      # Set up Gradle
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      # Cache Gradle dependencies to speed up the build
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # Install the Android emulator for the specified API level and ABI
      - name: Install emulator
        run: |
          sdkmanager "system-images;android-${{ matrix.api-level }};default;${{ matrix.abi }}"
          sdkmanager --licenses

      # Create and start the emulator
      - name: Create and Start Emulator
        run: |
          avdmanager create avd -n test -k "system-images;android-${{ matrix.api-level }};default;${{ matrix.abi }}" -d "${{ matrix.device }}" --force
          emulator -avd test -no-snapshot-save -no-window -noaudio &

      # Wait for the emulator to fully start
      - name: Wait for emulator to boot
        run: adb wait-for-device shell getprop init.svc.bootanim | grep stopped

      # Build the app using Gradle
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # Run your instrumented tests (UI tests)
      - name: Run tests
        run: ./gradlew connectedAndroidTest

      # Stop the emulator after tests
      - name: Kill emulator
        run: adb -s emulator-5554 emu kill
